appender.console.type = Console
appender.console.name = console
appender.console.layout.type = PatternLayout

rootLogger.level = info
rootLogger.appenderRef.console.ref = console





-

	// Settings settings = Settings.builder().put("cluster.name",
		// "myClusterName").build();
		// TransportClient client = new PreBuiltTransportClient(settings);

		//TransportClient client = new PreBuiltTransportClient(Settings.EMPTY).addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName("http://54.154.205.82"), 90));
		TransportClient client = new PreBuiltTransportClient(Settings.EMPTY)
				.addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName("localhost"), 9200));
		String json = "{" + "\"user\":\"kimchy\"," + "\"postDate\":\"2013-01-30\","
				+ "\"message\":\"trying out Elasticsearch\"" + "}";

		IndexResponse response = client.prepareIndex("twitter", "tweet").setSource(json).get();
		
		// Index name
		String _index = response.getIndex();
		System.out.println(_index);
		
		// Type name
		String _type = response.getType();
		System.out.println(_type);

		// Document ID (generated or not)
		String _id = response.getId();
		System.out.println(_id);

		// Version (if it's the first time you index this document, you will
		// get: 1)
		long _version = response.getVersion();
		System.out.println(_version);

		// status has stored current instance statement.
		RestStatus status = response.status();
		System.out.println(status);

		System.out.println("\n\n------------------------------------------------------------------\n\n");
		
		GetResponse response = client.prepareGet("twitter", "tweet", "1").get();
